
SML               := sml
# -32 or -64
# empty is default
SML_BITMODE       :=
SML_FLAGS         :=
HEAP_SUFFIX       := $(shell $(SML) $(SML_BITMODE) @SMLsuffix)

# directory of CM product
CM_SUFFIX         := $(shell $(SML) $(SML_BITMODE) < script/suffix.sml 2>&1 >/dev/null)

SMLDOC            := smldoc
SMLDOC_ARGFILE    := src/smldoc.cfg

MLBUILD           := ml-build
MLBUILD_FLAGS     :=

MLDEPENDS         := ml-makedepend
MLDEPENDS_FLAGS   := -n

SML_DULIST        :=

PREFIX            := /usr/local/sml
LIBDIR            := $(PREFIX)/lib
DOCDIR            := $(PREFIX)/doc

SMLUNIT_LIB       := .cm/$(CM_SUFFIX)/smlunit-lib.cm
SMLUNIT_LIB_COMPAT := \
                     .cm/$(CM_SUFFIX)/smlunitlib.cm

TEST_TARGET       := bin/TestMain.$(HEAP_SUFFIX)

BASIS_TEST_TARGET := bin/BasisTestMain.$(HEAP_SUFFIX)

EXAMPLE_TARGET    := bin/ExampleMain.$(HEAP_SUFFIX)

SMLUNIT_CM        := smlunit-lib.cm \
                     smlunitlib.cm

TEST_CM           := src/test/sources.cm

BASIS_TEST_CM     := basis/test/sources.cm

EXAMPLE_CM        := example/sources.cm

DEPENDS           := $(SMLUNIT_CM:.cm=.cm.d)

TEST_DEPENDS      := $(TEST_CM:.cm=.cm.d) \
                     $(BASIS_TEST_CM:.cm=.cm.d)

EXAMPLE_DEPENDS   := $(EXAMPLE_CM:.cm=.cm.d)


all: smlunit-lib


.PHONY: smlunit-lib-nodoc
smlunit-lib-nodoc: $(SMLUNIT_LIB) $(SMLUNIT_LIB_COMPAT)


.PHONY: smlunit-lib
smlunit-lib: smlunit-lib-nodoc doc


$(SMLUNIT_LIB) $(SMLUNIT_LIB_COMPAT): .cm/$(CM_SUFFIX)/%.cm: %.cm
	@echo "  [SMLNJ] $@"
	@echo 'CM.stabilize true "$<";' | $(SML) $(SML_BITMODE) $(SML_DULIST)


$(DEPENDS): %.cm.d: %.cm
	@echo "  [GEN] $@"
	@truncate --size 0 $@
	@-$(RM) $(dir $<).cm/$(CM_SUFFIX)/$<
	@$(MLDEPENDS) $(MLDEPENDS_FLAGS) $(SML_BITMODE) $(SML_DULIST) -f $@ $< $(dir $<).cm/$(CM_SUFFIX)/$<
	@sed -i -e "s|^\([^#][^:]\+\):|\1 $@:|" $@


$(TEST_DEPENDS) $(EXAMPLE_DEPENDS): %.cm.d: %.cm
	@echo "  [GEN] $@"
	@truncate --size 0 $@
	@$(MLDEPENDS) $(MLDEPENDS_FLAGS) $(SML_BITMODE) $(SML_DULIST) -f $@ $< $(dir $<).cm/$(CM_SUFFIX)
	@sed -i -e "s|^\([^#][^:]\+\):|\1 $@:|" $@


ifeq (,$(findstring clean,$(MAKECMDGOALS)))
  include $(DEPENDS)
endif


ifeq (test,$(findstring test,$(MAKECMDGOALS)))
  include $(TEST_DEPENDS)
endif


ifeq (example,$(findstring example,$(MAKECMDGOALS)))
  include $(EXAMPLE_DEPENDS)
endif


.PHONY: install-nodoc
install-nodoc: smlunit-lib-nodoc
	@install -D -m 644 -t $(LIBDIR)/smlunit-lib.cm/.cm/$(CM_SUFFIX)  $(SMLUNIT_LIB)
	@install -D -m 644 -t $(LIBDIR)/smlunitlib.cm/.cm/$(CM_SUFFIX)   $(SMLUNIT_LIB_COMPAT)
	@echo "================================================================"
	@echo "Add an entry to your pathconfig (e.g. ~/.smlnj-pathconfig):"
	@echo "\tsmlunit-lib.cm $(LIBDIR)/smlunit-lib.cm"
	@echo "\tsmlunitlib.cm  $(LIBDIR)/smlunitlib.cm"
	@echo "================================================================"


.PHONY: install
install: install-doc install-nodoc


.PHONY: doc
doc:
	@echo "  [SMLDoc]"
	@$(RM) -r doc/api
	@install -d doc/api
	@$(SMLDOC) -c UTF-8 -a $(SMLDOC_ARGFILE) -d doc/api


.PHONY: install-doc
install-doc: doc
	@install -d $(DOCDIR)
	@cp -prT doc $(DOCDIR)/smlunit-lib
	@echo "================================================================"
	@echo "Generated API Documents of SMLUnit"
	@echo "\t$(DOCDIR)/smlunit-lib"
	@echo "================================================================"


$(TEST_TARGET): $(TEST_CM)
	@echo "  [SMLNJ] $@"
	@install -d $(dir $@)
	@$(MLBUILD) $(SML_BITMODE) $(SML_DULIST) $(MLBUILD_FLAGS) $< TestMain.main $(basename $@)


$(BASIS_TEST_TARGET): $(BASIS_TEST_CM)
	@echo "  [SMLNJ] $@"
	@install -d $(dir $@)
	@$(MLBUILD) $(SML_BITMODE) $(SML_DULIST) $(MLBUILD_FLAGS) $< TestMain.main $(basename $@)


.PHONY: test
#test: $(TEST_TARGET) $(BASIS_TEST_TARGET)
	# $(SML) $(SML_BITMODE) $(SML_DULIST) $(SML_FLAGS) @SMLload=$(TEST_TARGET)
test: $(BASIS_TEST_TARGET)
	$(SML) $(SML_BITMODE) $(SML_DULIST) $(SML_FLAGS) @SMLload=$(BASIS_TEST_TARGET)


$(EXAMPLE_TARGET): example/.cm/$(CM_SUFFIX)
	@echo "  [SMLNJ] $@"
	@mkdir -p bin
	@$(MLBUILD) $(SML_BITMODE) $(SML_DULIST) $(MLBUILD_FLAGS) $(patsubst %/.cm/amd64-unix,%/sources.cm,$<) Main.main $(basename $@)


.PHONY: example
example: $(EXAMPLE_TARGET)
	$(SML) $(SML_BITMODE) $(SML_DULIST) $(SML_FLAGS) @SMLload=$<


.PHONY: clean
clean:
	-$(RM) $(SMLUNIT_LIB)
	-$(RM) $(SMLUNIT_LIB_COMPAT)
	-$(RM) $(DEPENDS)
	-$(RM) $(TEST_TARGET)
	-$(RM) $(BASIS_TEST_TARGET)
	-$(RM) $(TEST_DEPENDS)
	-$(RM) $(EXAMPLE_TARGET)
	-$(RM) $(EXAMPLE_DEPENDS)
	-$(RM) -r doc/api
	-$(RM) -r .cm
	-$(RM) -r src/.cm
	-$(RM) -r src/main/.cm
	-$(RM) -r src/test/.cm
	-$(RM) -r basis/test/.cm
	-$(RM) -r example/.cm
